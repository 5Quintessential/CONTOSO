<UserControl
    x:Class="Microsoft.DPE.ReferenceApps.Food.Client.Flyouts.RestaurantFilterFlyout"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Microsoft.DPE.ReferenceApps.Food.Lib.Controls"
  xmlns:viewmodels="using:Microsoft.DPE.ReferenceApps.Food.Client.ViewModels"
  xmlns:converters="using:Microsoft.DPE.ReferenceApps.Food.Lib.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    DataContext="{Binding RelativeSource={RelativeSource Self},Path=CurrentData,Mode=TwoWay}"
    mc:Ignorable="d"
    d:DesignHeight="500"
    d:DesignWidth="600">

    <UserControl.Resources>
        <converters:PriceRangeToTextConverter x:Key="convertPriceRangeToText"/>
        <converters:CusineRawStringToCusineDisplayNameConverter x:Key="convertCuisineName"/>
    </UserControl.Resources>

    <Border BorderBrush="Black" BorderThickness="1">
        <Grid Background="Gainsboro">
            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="FontFamily" Value="Segoe UI Light" />
                    <Setter Property="FontSize" Value="20" />
                    <Setter Property="Foreground" Value="Gray" />
                </Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="SteelBlue" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="BorderBrush" Value="Gray" />
                    <Setter Property="BorderThickness" Value="1" />
                </Style>
                <Style TargetType="CheckBox">
                    <Setter Property="FontFamily" Value="Segoe UI Light" />
                    <Setter Property="FontSize" Value="20" />
                    <Setter Property="Foreground" Value="Gray" />
                </Style>

                <Style TargetType="ComboBox">
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="Gray" />
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.5*"/>
                <ColumnDefinition Width="0.5*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="23*"/>
                <RowDefinition Height="4*"/>
            </Grid.RowDefinitions>
            <StackPanel Margin="10,10,5,10" Grid.Row="1">
                <TextBlock Margin="0" TextWrapping="Wrap" Text="Order By" VerticalAlignment="Center" 
                    Visibility="{Binding ShowOrderBy, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <ComboBox x:Name="cbxOrderBy" Margin="0,5,0,0"
                    SelectedIndex="{Binding OrderBy,Mode=TwoWay}" 
                    Visibility="{Binding ShowOrderBy, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                
                <TextBlock Margin="0,5,0,0" TextWrapping="Wrap" Text="Cuisine" VerticalAlignment="Center"  />
                <ComboBox x:Name="cbxCuisine" Margin="0,5,0,0" SelectedIndex="{Binding Cuisine,Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource convertCuisineName}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                
                <TextBlock Margin="0,5,0,0" TextWrapping="Wrap" Text="Price Range" VerticalAlignment="Center"  />
                <ComboBox x:Name="cbxPriceRanges" Margin="0,5,0,0" SelectedIndex="{Binding PriceRange,Mode=TwoWay}"/>
            </StackPanel>
            <StackPanel Grid.Column="1" Grid.Row="1" Margin="20,15,10,10">
                <CheckBox x:Name="chkReservationsRequired" Content="Accepts Reservations" Margin="0" VerticalAlignment="Stretch" IsChecked="{Binding ReservationRequired,Mode=TwoWay}"/>
                <CheckBox x:Name="chkTakeout" Content="Takeout" Margin="0" VerticalAlignment="Stretch" IsChecked="{Binding Takeout,Mode=TwoWay}"/>
                <CheckBox x:Name="chkDelivery" Content="Delivery" Margin="0" VerticalAlignment="Stretch" IsChecked="{Binding Delivery,Mode=TwoWay}"/>
                <CheckBox x:Name="chkAlcohol" Content="Serves Alcohol" Margin="0" VerticalAlignment="Stretch" IsChecked="{Binding Alcohol,Mode=TwoWay}"/>
                <CheckBox x:Name="chkVegetarian" Content="Vegetarian Options" Margin="0" VerticalAlignment="Stretch" IsChecked="{Binding Vegetarian,Mode=TwoWay}"/>
                <CheckBox x:Name="chkParking" Content="Parking" Margin="0" VerticalAlignment="Stretch" IsChecked="{Binding Parking,Mode=TwoWay}"/>
                <CheckBox x:Name="chkKidFriendly" Content="Kid Friendly" Margin="0" VerticalAlignment="Stretch" IsChecked="{Binding KidFriendly,Mode=TwoWay}"/>
            </StackPanel>
            <Button Content="Apply Filter" Grid.Column="0" HorizontalAlignment="Stretch" Margin="10,5,10,5" Grid.Row="2" VerticalAlignment="Stretch" x:Name="btnApplyFilter" Tapped="btnApplyFilter_Tapped"/>
            <Button Content="Clear Filter" Grid.Column="1" HorizontalAlignment="Stretch" Margin="10,5,10,5" Grid.Row="2" VerticalAlignment="Stretch" x:Name="btnClearFilter" Click="ClearFilter_Click"/>

        </Grid>
    </Border>
</UserControl>
